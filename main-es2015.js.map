{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dice-roll/dice-check-result.model.ts","./src/app/dice-roll/dice-check.model.ts","./src/app/dice-roll/dice-roll.component.ts","./src/app/dice-roll/dice-roll.component.html","./src/app/dice-roll/dice-roll.service.ts","./src/app/game-control/game-control.component.ts","./src/app/game-control/game-control.component.html","./src/app/game-events/game-events.component.ts","./src/app/game-events/game-events.component.html","./src/app/player-list/player-edit/player-edit.component.ts","./src/app/player-list/player-edit/player-edit.component.html","./src/app/player-list/player-item/player-item.component.ts","./src/app/player-list/player-item/player-item.component.html","./src/app/player-list/player-list.component.ts","./src/app/player-list/player-list.component.html","./src/app/shared/button/button.component.ts","./src/app/shared/button/button.component.html","./src/app/shared/game-event.model.ts","./src/app/shared/game-event.service.ts","./src/app/shared/game.model.ts","./src/app/shared/game.service.ts","./src/app/shared/player.model.ts","./src/app/shared/radio-group/radio-group.component.ts","./src/app/shared/radio-group/radio-group.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { GameState } from './shared/game.model';\nimport { Player } from './shared/player.model';\nimport { GameService } from './shared/game.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  gameState: GameState;\n\n  constructor(private gameService: GameService){}\n\n  ngOnInit() {\n    this.gameState = this.gameService.getGameState();\n    this.gameService.gameStateChanged.subscribe(\n      (gameState: GameState) => this.gameState = gameState\n    );\n\n    this.gameService.addPlayer(\n      new Player('Guaxa', 3, 'um guaxinim')\n    )\n  }\n\n}\n","<div class=\"app\">\n  <header class=\"app-header\">\n    <h1 class=\"app-title\"> Guaxinins e Gambiarras </h1>\n  </header>\n\n  <section class=\"app-gameControl\">\n    <app-game-control [gameState]=\"gameState\"></app-game-control>\n  </section>\n\n  <div class=\"app-gameContent\">\n    <section class=\"app-playerList\">\n      <app-player-list [gameState]=\"gameState\"></app-player-list>\n    </section>\n    <section class=\"app-gameEvents\">\n      <app-game-events></app-game-events>\n    </section>\n  </div>\n\n  <app-dice-roll></app-dice-roll>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { GameControlComponent } from './game-control/game-control.component';\nimport { ButtonComponent } from './shared/button/button.component';\nimport { PlayerListComponent } from './player-list/player-list.component';\nimport { PlayerItemComponent } from './player-list/player-item/player-item.component';\nimport { PlayerEditComponent } from './player-list/player-edit/player-edit.component';\nimport { GameEventsComponent } from './game-events/game-events.component';\nimport { DiceRollComponent } from './dice-roll/dice-roll.component';\nimport { RadioGroupComponent } from './shared/radio-group/radio-group.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameControlComponent,\n    ButtonComponent,\n    PlayerListComponent,\n    PlayerItemComponent,\n    PlayerEditComponent,\n    GameEventsComponent,\n    DiceRollComponent,\n    RadioGroupComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class DiceCheckResult{\n  \n  playerName: string;\n  attribute: number;\n  actionType: string;\n  rolls: number[] = [];\n\n  countSuccesses() {\n    if (this.actionType === 'physical') {\n      return this.rolls.filter( roll => roll < this.attribute).length;\n    }\n    else {\n      return this.rolls.filter( roll => roll > this.attribute).length;\n    }\n  }\n\n  countCritical(): number {\n    return this.rolls.filter( roll => roll === this.attribute).length;\n  }\n\n}","import { PlayerAttribute } from '../shared/player.model';\nimport { DiceCheckResult } from './dice-check-result.model';\n\nexport type DiceCheckType = 'physical' | 'not-physical';\n\nexport class DiceCheck {\n  \n  attribute: PlayerAttribute;\n  checkType: DiceCheckType = \"physical\"\n  rolls: number = 2;\n\n  run(): DiceCheckResult {\n    return new DiceCheckResult();\n  }\n\n}","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { DiceRollService } from './dice-roll.service';\nimport { DiceCheck, DiceCheckType } from './dice-check.model';\nimport { GameService } from '../shared/game.service';\nimport { Player } from '../shared/player.model';\n\n@Component({\n  selector: 'app-dice-roll',\n  templateUrl: './dice-roll.component.html',\n  styleUrls: ['./dice-roll.component.scss']\n})\nexport class DiceRollComponent implements OnInit {\n\n  diceCheck: DiceCheck;\n  players: Player[];\n\n  @ViewChild('playerSelect') playerSelectInput: ElementRef;\n\n  difficultyLevels = [\n    {value: 3, text: 'Fácil'}, \n    {value: 2, text: 'Normal'}, \n    {value: 1, text: 'Difícil'}\n  ]\n\n  actionTypes = [\n    {value: \"physical\", text: \"Física\"},\n    {value: \"not-physical\", text: \"Não Física\"}\n  ]\n\n  constructor(private diceRollService: DiceRollService, \n              private gameService: GameService) { \n  }\n\n  ngOnInit(): void {\n    this.diceRollService.rollRequested.subscribe(\n      (diceCheck: DiceCheck) => this.diceCheck = diceCheck\n    )\n    this.players = this.gameService.getPlayers()\n    this.gameService.playersChanged.subscribe(\n      (players: Player[]) => this.players = players\n    )\n  }\n\n  private getSelectedPlayer(): Player {\n    const playerId = this.playerSelectInput.nativeElement.value;\n    return this.players[playerId];\n  }\n\n  onSelectPlayer() {\n    const player = this.getSelectedPlayer();\n    if (player) {\n      this.diceCheck.attribute = player.attribute;\n    }\n    else {\n      this.diceCheck.attribute = null;\n    }\n  }\n\n  getSelectedDifficulty() {\n    return this.difficultyLevels.find( level => level.value === this.diceCheck.rolls);\n  }\n\n  getSelectedActionType() {\n    return this.actionTypes.find( actionType => actionType.value === this.diceCheck.checkType);\n  }\n\n  onSelectDifficulty(difficulty: string) {\n    this.diceCheck.rolls = Number.parseInt(difficulty);\n  }\n\n  onSelectCheckType(checkType: string) {\n    this.diceCheck.checkType = <DiceCheckType>checkType;\n  }\n\n  isRollEnabled() {\n    return this.diceCheck.attribute && this.diceCheck.checkType && this.diceCheck.rolls;\n  }\n\n  onRoll() {\n    this.diceRollService.roll(this.diceCheck, this.getSelectedPlayer().name);\n    this.diceCheck = null;\n  }\n\n  onCancel() {\n    this.diceCheck = null;\n  }\n\n}\n","<div *ngIf=\"diceCheck\">\n  <div class=\"diceRollOverlay\" (click)=\"onCancel()\"></div>\n  <div class=\"diceRollContainer\">\n\n    <h2> Rolagem </h2>\n\n    <select class=\"playersSelect\" (input)=\"onSelectPlayer()\" #playerSelect>\n      <option value=\"-1\"> --- </option>\n      <option *ngFor=\"let player of players; let id = index\" [value]=\"id\">\n        {{ player.name }}\n      </option>\n    </select>\n\n    <app-radio-group \n      class=\"difficultySelect\"\n      [items]=\"difficultyLevels\" \n      [selectedItem]=\"getSelectedDifficulty()\"\n      (valueSelected)=\"onSelectDifficulty($event)\"\n      name=\"difficulty\"\n      title=\"difficulty\"\n      ></app-radio-group>\n\n    <app-radio-group \n      class=\"actionTypeSelect\"\n      [items]=\"actionTypes\" \n      [selectedItem]=\"getSelectedActionType()\"\n      (valueSelected)=\"onSelectCheckType($event)\"\n      name=\"actionType\"\n      title=\"action type\"\n      ></app-radio-group>\n\n    <div class=\"actionsGroup\">\n      <app-button \n        class=\"actionButton\"\n        category=\"primary\" \n        [disabled]=\"!isRollEnabled()\" \n        (click)=\"onRoll()\"\n        >\n        Rolar\n      </app-button>\n      <app-button \n        class=\"actionButton\"\n        category=\"default\" \n        (click)=\"onCancel()\"\n        >\n        Cancelar\n      </app-button>\n    </div>\n  </div>\n</div>","import { DiceCheck } from './dice-check.model';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { DiceCheckResult } from './dice-check-result.model';\nimport { GameEventService } from '../shared/game-event.service';\n\n@Injectable({providedIn: 'root'})\nexport class DiceRollService{\n\n  rollRequested = new EventEmitter<DiceCheck>();\n\n  constructor(private gameEventService: GameEventService){}\n\n  requestDiceRoll() {\n    this.rollRequested.emit(new DiceCheck());\n  }\n\n  roll(diceCheck: DiceCheck, playerName: string) {\n    const result = new DiceCheckResult();\n    result.playerName = playerName;\n    result.attribute = diceCheck.attribute;\n    result.actionType = diceCheck.checkType;\n    for(let i = 0; i<diceCheck.rolls; i++) {\n      result.rolls.push( this.rollDie() )\n    }\n    this.gameEventService.recordDiceRollEvent(result);\n  }\n\n  private rollDie() : number {\n    return Math.ceil(Math.random() * 6);\n  }\n\n}","import { Component, OnInit, Input} from '@angular/core';\nimport { GameState } from '../shared/game.model';\nimport { GameService } from '../shared/game.service';\nimport { DiceRollService } from '../dice-roll/dice-roll.service';\n\n@Component({\n  selector: 'app-game-control',\n  templateUrl: './game-control.component.html',\n  styleUrls: ['./game-control.component.scss']\n})\nexport class GameControlComponent implements OnInit {\n\n  constructor(private gameService: GameService, private diceRollService: DiceRollService) { }\n\n  @Input() gameState: GameState;\n\n  ngOnInit(): void {\n  }\n\n  onStartGame() {\n    this.gameService.changeGameState(\"started\");\n  }\n\n  onEditGame() {\n    this.gameService.changeGameState(\"editing\");\n  }\n\n  onResumeGame() {\n    this.gameService.changeGameState(\"started\");\n  }\n\n  onFinishGame() {\n    if(window.confirm('Realmente deseja finalizar a partida?')) {\n      this.gameService.changeGameState(\"finished\");\n    }\n  }\n\n  onRequestRoll() {\n    this.diceRollService.requestDiceRoll();\n  }\n\n  onRestartGame() {\n    this.gameService.resetGame();\n  }\n\n}\n","<div class=\"actions\">\n  <app-button category=\"primary\"\n    *ngIf=\"gameState === 'not-started'\"\n    (onClick)=\"onStartGame()\"\n    > \n    Começar\n  </app-button>\n\n  <app-button category=\"primary\"\n    *ngIf=\"gameState === 'editing'\"\n    (onClick)=\"onResumeGame()\"\n    > \n    Retomar\n  </app-button>\n\n  <app-button category=\"primary\"\n    *ngIf=\"gameState === 'started'\"\n    (onClick)=\"onRequestRoll()\"\n    > \n    Rolar Dados\n  </app-button>\n\n  <app-button category=\"default\"\n    *ngIf=\"gameState === 'started'\"\n    (onClick)=\"onEditGame()\"\n    > \n    Alterar Jogadores\n  </app-button>\n\n  <app-button category=\"danger\"\n    *ngIf=\"gameState === 'started'\"\n    (onClick)=\"onFinishGame()\"> \n    Finalizar\n  </app-button>\n\n  <app-button category=\"primary\"\n    *ngIf=\"gameState === 'finished'\"\n    (onClick)=\"onRestartGame()\"\n  > \n    Reiniciar\n  </app-button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GameEventService } from '../shared/game-event.service';\nimport { GameEvent } from '../shared/game-event.model';\n\n@Component({\n  selector: 'app-game-events',\n  templateUrl: './game-events.component.html',\n  styleUrls: ['./game-events.component.scss']\n})\nexport class GameEventsComponent implements OnInit {\n\n  events: GameEvent[];\n\n  constructor(private gameEventService: GameEventService) { }\n\n  ngOnInit(): void {\n    this.events = this.gameEventService.getEvents();\n    this.gameEventService.eventsChanged.subscribe(\n      (events: GameEvent[]) => this.events = events\n    )\n  }\n\n}\n","<ul class=\"gameEvents\" *ngIf=\"events && events.length > 0\">\n  <li class=\"gameEvent\"\n    *ngFor=\"let gameEvent of events\">\n\n    <span class=\"time\">{{ gameEvent.timestamp }}</span> \n    <span [ngSwitch]=\"gameEvent.eventType.constructor.name\">\n\n      <span *ngSwitchCase=\"'PlayerCreatedEvent'\">\n        Jogador(a) <span class=\"player\"> {{ gameEvent.eventType.playerName}}</span> criado(a)\n      </span>\n\n      <span *ngSwitchCase=\"'PlayerRemovedEvent'\">\n        Jogador(a) <span class=\"player\"> {{ gameEvent.eventType.playerName}}</span> removido(a)\n      </span>\n\n      <span *ngSwitchCase=\"'PlayerChangedEvent'\">\n        Jogador(a) <span class=\"player\"> {{ gameEvent.eventType.playerName}}</span> alterou:\n        <span *ngIf=\"gameEvent.eventType.nameChanged\">\n          nome para <span class=\"player\">{{ gameEvent.eventType.nameChanged }}</span>; \n        </span>\n        <span *ngIf=\"gameEvent.eventType.attributeChanged\"> \n          atributo de <span class=\"attribute\">{{ gameEvent.eventType.attributeChanged[0] }}</span>\n          para <span class=\"attribute\">{{ gameEvent.eventType.attributeChanged[1] }}</span>; \n        </span>\n        <span *ngIf=\"gameEvent.eventType.descriptionChanged\"> \n          descrição para <span class=\"description\">{{ gameEvent.eventType.descriptionChanged }}</span>\n        </span>\n      </span>\n\n      <span *ngSwitchCase=\"'SimpleMessageEvent'\">\n        {{gameEvent.eventType.text}}\n      </span>\n\n      <span *ngSwitchCase=\"'DiceCheckEvent'\">\n        <span class=\"player\">{{gameEvent.eventType.playerName}}</span>({{gameEvent.eventType.attribute}})\n        tentou uma ação \n          <strong *ngIf=\"gameEvent.eventType.actionType === 'physical'\">física</strong> \n          <strong *ngIf=\"gameEvent.eventType.actionType === 'not-physical'\">não física</strong> \n        e rolou\n        (<span class=\"number\">{{ gameEvent.eventType.rolls.join(', ') }}</span>).\n\n        <span class=\"player\" *ngIf=\"gameEvent.eventType.critical > 0\"> Acerto crítico! </span>\n        <span class=\"success\" *ngIf=\"gameEvent.eventType.successes > 0 && gameEvent.eventType.critical === 0\"> Sucesso. </span>\n        <span class=\"failure\" *ngIf=\"gameEvent.eventType.successes === 0 && gameEvent.eventType.critical === 0\"> Falhou. </span>\n\n      </span>\n\n\n      <span *ngSwitchDefault>\n        {{ gameEvent.eventType.constructor.name }}\n      </span>\n\n\n    </span>\n  </li>\n</ul>\n\n","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { Player, PlayerAttribute } from 'src/app/shared/player.model';\n\n@Component({\n  selector: 'app-player-edit',\n  templateUrl: './player-edit.component.html',\n  styleUrls: ['./player-edit.component.scss']\n})\nexport class PlayerEditComponent implements OnInit {\n\n  @Input() player: Player;\n  @Output() playerEdited = new EventEmitter<Player>();\n\n  @ViewChild('playerName') playerNameInput: ElementRef;\n  @ViewChild('playerAttribute') playerAttributeInput: ElementRef;\n  @ViewChild('playerDescription') playerDescriptionInput: ElementRef;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getFormData() {\n    return {\n      name: this.playerNameInput.nativeElement.value,\n      attribute: <PlayerAttribute>Number(this.playerAttributeInput.nativeElement.value),\n      description: this.playerDescriptionInput.nativeElement.value\n    }\n  }\n\n  onConfirm() { \n    let formData = this.getFormData();\n    this.playerEdited.emit(\n      new Player(\n        formData.name,\n        formData.attribute,\n        formData.description\n      )\n    );\n  }\n\n}\n","<input class=\"playerName\" value=\"{{ player.name }}\" #playerName>\n<app-button category=\"primary\" (click)=\"onConfirm()\">Confirmar</app-button>\n<select class=\"playerAttribute\" #playerAttribute>\n  <option *ngFor=\"let value of [2, 3, 4, 5]\"\n    [value]=\"value\"\n    [selected]=\"player.attribute === value\">\n    {{ value }}\n  </option>\n</select>\n<textarea class=\"playerDescription\" [value]=\"player.description\" #playerDescription>\n  \n</textarea>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Player } from 'src/app/shared/player.model';\nimport { GameState } from 'src/app/shared/game.model';\nimport { GameService } from 'src/app/shared/game.service';\n\n@Component({\n  selector: 'app-player-item',\n  templateUrl: './player-item.component.html',\n  styleUrls: ['./player-item.component.scss']\n})\nexport class PlayerItemComponent implements OnInit {\n\n  @Input() player: Player;\n  @Input() id: number;\n  @Output() editClicked = new EventEmitter<number>();\n  @Output() removeClicked = new EventEmitter<number>();\n\n  @Input() gameState: GameState;\n\n  constructor(private gameService: GameService) { }\n\n  ngOnInit(): void {\n  }\n\n  onEdit() {\n    this.gameService.changeGameState('editing-player');\n    this.editClicked.emit(this.id);\n  }\n\n  onRemove() {\n    this.removeClicked.emit(this.id);\n  }\n\n  isEditable() {\n    return this.gameService.isGameStateEditable(this.gameState);\n  }\n\n}\n","<h3 class=\"playerName\"> {{ player.name }} \n  <app-button \n    size=\"small\" \n    (click)=\"onEdit()\" \n    *ngIf=\"isEditable()\"\n    >\n    editar\n  </app-button>\n\n  <app-button \n    size=\"small\" \n    category=\"danger\" \n    (click)=\"onRemove()\" \n    *ngIf=\"isEditable()\"\n    >\n    remover\n  </app-button>\n</h3>\n<div class=\"playerAttribute\"> {{ player.attribute }} </div>\n<p class=\"playerDescription\">\n  {{ player.description }}\n</p>","import { Component, OnInit, Input } from '@angular/core';\nimport { GameService } from '../shared/game.service';\nimport { Player } from '../shared/player.model';\nimport { GameState } from '../shared/game.model';\n\n@Component({\n  selector: 'app-player-list',\n  templateUrl: './player-list.component.html',\n  styleUrls: ['./player-list.component.scss']\n})\nexport class PlayerListComponent implements OnInit {\n  players: Player[];\n  editing: number;\n  @Input() gameState: GameState;\n\n  constructor(private gameService: GameService) { }\n\n  ngOnInit(): void {\n    this.players = this.gameService.getPlayers();\n    this.gameService.playersChanged.subscribe(\n      (players: Player[]) => this.players = players\n    )\n  }\n\n  onAddNewPlayer() {\n    this.editing = this.gameService.addPlayer( new Player('Name', 2, '') );\n  }\n\n  onEditClicked(id: number) {\n    this.editing = id;\n  }\n\n  onRemoveClicked(id: number) {\n    if(window.confirm(`Realmente deseja remover [${this.players[id].name}]?`)) {\n      this.gameService.removePlayer(id);\n    }\n  }\n\n  onEditFinished(player: Player) {\n    this.gameService.changePlayer(\n      this.editing,\n      player  \n    );\n    this.editing = null;\n    this.gameService.changeGameState('editing');\n  }\n\n  canAddPlayer(): boolean {\n    return this.gameService.isGameStateEditable(this.gameState);\n  }\n\n}\n","<ul class=\"playersList\">\n  <li class=\"playerContainer\"\n    *ngFor=\"let player of players; let id = index\">\n   \n    <app-player-item \n      [player]=\"player\" \n      [id]=\"id\" \n      [gameState]=\"gameState\"\n      (editClicked)=\"onEditClicked($event)\"\n      (removeClicked)=\"onRemoveClicked($event)\"\n      *ngIf=\"editing !== id\"></app-player-item>\n\n    <app-player-edit \n      [player]=\"player\" \n      (playerEdited)=\"onEditFinished($event)\"\n      *ngIf=\"editing === id\"></app-player-edit>\n\n  </li>\n</ul>\n\n<div class=\"addPlayer\" *ngIf=\"canAddPlayer()\">\n  <app-button (onClick)=\"onAddNewPlayer()\"> Adicionar Jogador(a) </app-button>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\ntype ButtonCategory = \"default\" | \"danger\" | \"primary\"\ntype ButtonSize = \"small\" | \"default\" | \"large\"\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() category: ButtonCategory = \"default\";\n  @Input() size: ButtonSize = \"default\";\n  @Input() disabled: boolean = false;\n\n  @Output() onClick = new EventEmitter<void>();\n\n  ngOnInit(): void {\n  }\n\n}","<button\n  class=\"size-{{size}} {{category}}\"\n  (click)=\"onClick.emit()\"\n  [disabled]=\"disabled\"\n> <ng-content></ng-content> </button>","import { PlayerAttribute } from './player.model';\nimport { DiceCheckResult } from '../dice-roll/dice-check-result.model';\n\nexport type GameEventType = SimpleMessageEvent | PlayerCreatedEvent | PlayerChangedEvent | PlayerRemovedEvent\n\nexport class GameEvent {\n  \n  eventType: GameEventType;\n  timestamp: string;\n\n  constructor(eventType: GameEventType) {\n    this.eventType = eventType;\n    this.timestamp = this.getFormattedTimestamp();\n  }\n\n  private getFormattedTimestamp() {\n    const t = new Date();\n    const hours = `${t.getHours()}`;\n    const minutes = `${t.getMinutes() < 10 ? '0' : ''}${t.getMinutes()}`\n    const seconds = `${t.getSeconds() < 10 ? '0' : ''}${t.getSeconds()}`\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n}\n\nexport class PlayerCreatedEvent {\n  playerName: string;\n  constructor(playerName: string){\n    this.playerName = playerName\n  }\n}\n\nexport class PlayerRemovedEvent {\n  playerName: string;\n  constructor(playerName: string){\n    this.playerName = playerName\n  }\n}\n\nexport class PlayerChangedEvent {\n\n  playerName: string = null;\n  nameChanged: string = null;\n  attributeChanged: [PlayerAttribute, PlayerAttribute] = null;\n  descriptionChanged: string = null;\n\n  constructor(playerName: string,\n              nameChanged: string, \n              attributeChanged: [PlayerAttribute, PlayerAttribute], \n              descriptionChanged: string) {\n    this.playerName = playerName;\n    this.nameChanged = nameChanged;\n    this.attributeChanged = attributeChanged;\n    this.descriptionChanged = descriptionChanged;\n  }\n}\n\nexport class DiceCheckEvent {\n  successes: number;\n  critical: number;\n  playerName: string;\n  attribute: number;\n  actionType: string;\n  rolls: number[];\n\n  constructor(diceCheckResult: DiceCheckResult) {\n    this.successes = diceCheckResult.countSuccesses();\n    this.critical = diceCheckResult.countCritical();\n    this.playerName = diceCheckResult.playerName;\n    this.attribute = diceCheckResult.attribute;\n    this.actionType = diceCheckResult.actionType;\n    this.rolls = diceCheckResult.rolls;\n  }\n}\n\nexport class SimpleMessageEvent {\n  text: string;\n  constructor(text: string) {\n    this.text = text;\n  }\n}","import { GameEvent, PlayerCreatedEvent, PlayerChangedEvent, PlayerRemovedEvent, SimpleMessageEvent, DiceCheckEvent } from './game-event.model';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Player, PlayerAttribute } from './player.model';\nimport { DiceCheckResult } from '../dice-roll/dice-check-result.model';\n\n@Injectable({providedIn: 'root'})\nexport class GameEventService {\n  private events: GameEvent[] = [];\n  eventsChanged = new EventEmitter<GameEvent[]>();\n\n  private recordEvent(event: GameEvent): void {\n    this.events.unshift(event);\n    this.eventsChanged.emit(this.events.slice());\n  }\n\n  getEvents() {\n    return this.events.slice();\n  }\n\n  recordAddPlayerEvent(playerName: string): void{\n    this.recordEvent(new GameEvent(\n      new PlayerCreatedEvent(playerName)\n    ));\n  }\n\n  recordPlayerChangeEvent(oldPlayer: Player, newPlayer: Player): void {\n    let nameChanged: string = null;\n    let attributeChanged: [PlayerAttribute, PlayerAttribute] = null;\n    let descriptionChanged: string = null;\n    if (oldPlayer.name !== newPlayer.name){\n      nameChanged = newPlayer.name;\n    }\n    if (oldPlayer.attribute !== newPlayer.attribute) {\n      attributeChanged = [oldPlayer.attribute, newPlayer.attribute];\n    }\n    if (oldPlayer.description !== newPlayer.description) {\n      descriptionChanged = newPlayer.description;\n    }\n\n    if (nameChanged !== null || attributeChanged !== null || descriptionChanged !== null) {\n      this.recordEvent(\n        new GameEvent(new PlayerChangedEvent(\n          oldPlayer.name, nameChanged, attributeChanged, descriptionChanged\n        ))\n      );\n    }\n\n  }\n\n  recordRemovePlayerEvent(playerName: string): void {\n    this.recordEvent(\n      new GameEvent( new PlayerRemovedEvent(playerName) )\n    );\n  }\n\n  recordSimpleMessageEvent(text: string) {\n    this.recordEvent(\n      new GameEvent( new SimpleMessageEvent(text) )\n    )\n  }\n\n  recordDiceRollEvent(diceCheckResult: DiceCheckResult) {\n    this.recordEvent(\n      new GameEvent( new DiceCheckEvent(diceCheckResult) )\n    );\n  }\n\n  clear() {\n    this.events = [];\n    this.eventsChanged.emit([]);\n  }\n}","import { Player } from './player.model';\nimport { GameEvent } from './game-event.model';\n\nexport type GameState = \"not-started\" | \"started\" | \"editing\"| \"editing-player\" | \"finished\";\n\nexport class Game {\n\n  gameState: GameState = \"not-started\";\n  players: Player[] = [];\n\n}","import { Injectable, EventEmitter } from '@angular/core';\nimport { Game, GameState } from './game.model';\nimport { Player } from './player.model';\nimport { GameEventService } from './game-event.service';\n\n@Injectable({providedIn: 'root'})\nexport class GameService {\n  \n  private game: Game = new Game();\n\n  gameStateChanged = new EventEmitter<GameState>();\n  playersChanged = new EventEmitter<Player[]>();\n\n  constructor(private gameEventService: GameEventService){}\n\n  gameStarted(): boolean {\n    return this.game.gameState !== 'not-started';\n  }\n\n  addPlayer(player: Player): number {\n    if (this.gameStarted()){\n      this.gameEventService.recordAddPlayerEvent(player.name);\n    }\n\n    this.game.players.push(player);\n    this.playersChanged.emit(this.getPlayers());\n    return this.game.players.length - 1;\n  }\n\n  changeGameState(newState: GameState): void {\n    if (this.game.gameState === 'not-started' && newState === 'started') {\n      this.gameEventService.recordSimpleMessageEvent('A partida foi iniciada');\n    }\n    if (newState === 'finished') {\n      this.gameEventService.recordSimpleMessageEvent('A partida foi finalizada');\n    }\n    this.game.gameState = newState;\n    this.gameStateChanged.emit(newState);\n  }\n\n  getGameState(): GameState {\n    return this.game.gameState;\n  }\n\n  isGameStateEditable(gameState: GameState): boolean {\n    return gameState === 'editing' || gameState === 'not-started';\n  }\n\n  getPlayers(): Player[] {\n    return this.game.players.slice();\n  }\n\n  changePlayer(id: number, player: Player): void {\n    if (this.gameStarted()){\n      this.gameEventService.recordPlayerChangeEvent(this.game.players[id], player);\n    }\n    this.game.players[id] = player;\n    this.playersChanged.emit(this.getPlayers());\n  }\n\n  removePlayer(id: number): void {\n    if (this.gameStarted()){\n      this.gameEventService.recordRemovePlayerEvent(this.game.players[id].name);\n    }\n    this.game.players.splice(id, 1);\n    this.playersChanged.emit(this.getPlayers());\n  }\n\n  resetGame() {\n    this.game = new Game();\n    this.gameStateChanged.emit(this.game.gameState);\n    this.playersChanged.emit(this.game.players.slice());\n    this.gameEventService.clear()\n  }\n\n}","export class Player {\n\n  name: string;\n  attribute: PlayerAttribute;\n  description: string;\n\n  constructor(name: string, attribute: PlayerAttribute, description: string){\n    this.name = name;\n    this.attribute = attribute;\n    this.description = description;\n  }\n}\n\nexport type PlayerAttribute = 2 | 3 | 4 | 5;","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss']\n})\nexport class RadioGroupComponent implements OnInit {\n\n  @Input() items: {value: string, text: string}[];\n  @Input() name: string;\n  @Input() title: string;\n  @Input() selectedItem: {value: string, text: string};\n  @Output() valueSelected = new EventEmitter<string>();\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onChangeSelected(item: {value: string, text: string}) {\n    this.valueSelected.emit(item.value);\n  }\n\n}\n","<p *ngIf=\"title\" class=\"radioGroup-title\">{{ title }}: {{selectedItem.text}} </p>\n<div class=\"radioGroup-container\">\n  <label *ngFor=\"let item of items\" class=\"radioGroup-label\" (click)=\"onChangeSelected(item)\">\n    <input type=\"radio\" [name]=\"name\" [value]=\"item.value\" [checked]=\"item.value === selectedItem.value\">\n    <span class=\"radioGroup-item\">{{item.text}}</span>\n  </label>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}