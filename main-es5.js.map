{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dice-roll/dice-check-result.model.ts","webpack:///src/app/dice-roll/dice-check.model.ts","webpack:///src/app/dice-roll/dice-roll.component.ts","webpack:///src/app/dice-roll/dice-roll.component.html","webpack:///src/app/dice-roll/dice-roll.service.ts","webpack:///src/app/game-control/game-control.component.ts","webpack:///src/app/game-control/game-control.component.html","webpack:///src/app/game-events/game-events.component.ts","webpack:///src/app/game-events/game-events.component.html","webpack:///src/app/player-list/player-edit/player-edit.component.ts","webpack:///src/app/player-list/player-edit/player-edit.component.html","webpack:///src/app/player-list/player-item/player-item.component.ts","webpack:///src/app/player-list/player-item/player-item.component.html","webpack:///src/app/player-list/player-list.component.ts","webpack:///src/app/player-list/player-list.component.html","webpack:///src/app/shared/button/button.component.ts","webpack:///src/app/shared/button/button.component.html","webpack:///src/app/shared/game-event.model.ts","webpack:///src/app/shared/game-event.service.ts","webpack:///src/app/shared/game.model.ts","webpack:///src/app/shared/game.service.ts","webpack:///src/app/shared/player.model.ts","webpack:///src/app/shared/radio-group/radio-group.component.ts","webpack:///src/app/shared/radio-group/radio-group.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","gameService","gameState","getGameState","gameStateChanged","subscribe","addPlayer","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","DiceCheckResult","rolls","actionType","filter","roll","attribute","length","DiceCheck","checkType","DiceRollComponent","diceRollService","difficultyLevels","value","text","actionTypes","rollRequested","diceCheck","players","getPlayers","playersChanged","playerId","playerSelectInput","nativeElement","player","getSelectedPlayer","find","level","difficulty","Number","parseInt","name","DiceRollService","gameEventService","emit","playerName","result","i","push","rollDie","recordDiceRollEvent","Math","ceil","random","providedIn","GameControlComponent","changeGameState","window","confirm","requestDiceRoll","resetGame","GameEventsComponent","events","getEvents","eventsChanged","PlayerEditComponent","playerEdited","playerNameInput","playerAttributeInput","description","playerDescriptionInput","formData","getFormData","onConfirm","PlayerItemComponent","editClicked","removeClicked","isGameStateEditable","PlayerListComponent","editing","removePlayer","changePlayer","ButtonComponent","category","size","disabled","onClick","GameEvent","eventType","timestamp","getFormattedTimestamp","t","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","PlayerCreatedEvent","PlayerRemovedEvent","PlayerChangedEvent","nameChanged","attributeChanged","descriptionChanged","DiceCheckEvent","diceCheckResult","successes","countSuccesses","critical","countCritical","SimpleMessageEvent","GameEventService","event","unshift","slice","recordEvent","oldPlayer","newPlayer","Game","GameService","game","gameStarted","recordAddPlayerEvent","newState","recordSimpleMessageEvent","recordPlayerChangeEvent","recordRemovePlayerEvent","splice","clear","Player","RadioGroupComponent","valueSelected","item","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { GameState } from './shared/game.model';\nimport { Player } from './shared/player.model';\nimport { GameService } from './shared/game.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  gameState: GameState;\n\n  constructor(private gameService: GameService){}\n\n  ngOnInit() {\n    this.gameState = this.gameService.getGameState();\n    this.gameService.gameStateChanged.subscribe(\n      (gameState: GameState) => this.gameState = gameState\n    );\n\n    this.gameService.addPlayer(\n      new Player('Guaxa', 3, 'um guaxinim')\n    )\n  }\n\n}\n","<div class=\"app\">\n  <header class=\"app-header\">\n    <h1 class=\"app-title\"> Guaxinins e Gambiarras </h1>\n  </header>\n\n  <section class=\"app-gameControl\">\n    <app-game-control [gameState]=\"gameState\"></app-game-control>\n  </section>\n\n  <div class=\"app-gameContent\">\n    <section class=\"app-playerList\">\n      <app-player-list [gameState]=\"gameState\"></app-player-list>\n    </section>\n    <section class=\"app-gameEvents\">\n      <app-game-events></app-game-events>\n    </section>\n  </div>\n\n  <app-dice-roll></app-dice-roll>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { GameControlComponent } from './game-control/game-control.component';\nimport { ButtonComponent } from './shared/button/button.component';\nimport { PlayerListComponent } from './player-list/player-list.component';\nimport { PlayerItemComponent } from './player-list/player-item/player-item.component';\nimport { PlayerEditComponent } from './player-list/player-edit/player-edit.component';\nimport { GameEventsComponent } from './game-events/game-events.component';\nimport { DiceRollComponent } from './dice-roll/dice-roll.component';\nimport { RadioGroupComponent } from './shared/radio-group/radio-group.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameControlComponent,\n    ButtonComponent,\n    PlayerListComponent,\n    PlayerItemComponent,\n    PlayerEditComponent,\n    GameEventsComponent,\n    DiceRollComponent,\n    RadioGroupComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class DiceCheckResult{\n  \n  playerName: string;\n  attribute: number;\n  actionType: string;\n  rolls: number[] = [];\n\n  countSuccesses() {\n    if (this.actionType === 'physical') {\n      return this.rolls.filter( roll => roll < this.attribute).length;\n    }\n    else {\n      return this.rolls.filter( roll => roll > this.attribute).length;\n    }\n  }\n\n  countCritical(): number {\n    return this.rolls.filter( roll => roll === this.attribute).length;\n  }\n\n}","import { PlayerAttribute } from '../shared/player.model';\nimport { DiceCheckResult } from './dice-check-result.model';\n\nexport type DiceCheckType = 'physical' | 'not-physical';\n\nexport class DiceCheck {\n  \n  attribute: PlayerAttribute;\n  checkType: DiceCheckType = \"physical\"\n  rolls: number = 2;\n\n  run(): DiceCheckResult {\n    return new DiceCheckResult();\n  }\n\n}","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { DiceRollService } from './dice-roll.service';\nimport { DiceCheck, DiceCheckType } from './dice-check.model';\nimport { GameService } from '../shared/game.service';\nimport { Player } from '../shared/player.model';\n\n@Component({\n  selector: 'app-dice-roll',\n  templateUrl: './dice-roll.component.html',\n  styleUrls: ['./dice-roll.component.scss']\n})\nexport class DiceRollComponent implements OnInit {\n\n  diceCheck: DiceCheck;\n  players: Player[];\n\n  @ViewChild('playerSelect') playerSelectInput: ElementRef;\n\n  difficultyLevels = [\n    {value: 3, text: 'Fácil'}, \n    {value: 2, text: 'Normal'}, \n    {value: 1, text: 'Difícil'}\n  ]\n\n  actionTypes = [\n    {value: \"physical\", text: \"Física\"},\n    {value: \"not-physical\", text: \"Não Física\"}\n  ]\n\n  constructor(private diceRollService: DiceRollService, \n              private gameService: GameService) { \n  }\n\n  ngOnInit(): void {\n    this.diceRollService.rollRequested.subscribe(\n      (diceCheck: DiceCheck) => this.diceCheck = diceCheck\n    )\n    this.players = this.gameService.getPlayers()\n    this.gameService.playersChanged.subscribe(\n      (players: Player[]) => this.players = players\n    )\n  }\n\n  private getSelectedPlayer(): Player {\n    const playerId = this.playerSelectInput.nativeElement.value;\n    return this.players[playerId];\n  }\n\n  onSelectPlayer() {\n    const player = this.getSelectedPlayer();\n    if (player) {\n      this.diceCheck.attribute = player.attribute;\n    }\n    else {\n      this.diceCheck.attribute = null;\n    }\n  }\n\n  getSelectedDifficulty() {\n    return this.difficultyLevels.find( level => level.value === this.diceCheck.rolls);\n  }\n\n  getSelectedActionType() {\n    return this.actionTypes.find( actionType => actionType.value === this.diceCheck.checkType);\n  }\n\n  onSelectDifficulty(difficulty: string) {\n    this.diceCheck.rolls = Number.parseInt(difficulty);\n  }\n\n  onSelectCheckType(checkType: string) {\n    this.diceCheck.checkType = <DiceCheckType>checkType;\n  }\n\n  isRollEnabled() {\n    return this.diceCheck.attribute && this.diceCheck.checkType && this.diceCheck.rolls;\n  }\n\n  onRoll() {\n    this.diceRollService.roll(this.diceCheck, this.getSelectedPlayer().name);\n    this.diceCheck = null;\n  }\n\n  onCancel() {\n    this.diceCheck = null;\n  }\n\n}\n","<div *ngIf=\"diceCheck\">\n  <div class=\"diceRollOverlay\" (click)=\"onCancel()\"></div>\n  <div class=\"diceRollContainer\">\n\n    <h2> Rolagem </h2>\n\n    <select class=\"playersSelect\" (input)=\"onSelectPlayer()\" #playerSelect>\n      <option value=\"-1\"> --- </option>\n      <option *ngFor=\"let player of players; let id = index\" [value]=\"id\">\n        {{ player.name }}\n      </option>\n    </select>\n\n    <app-radio-group \n      class=\"difficultySelect\"\n      [items]=\"difficultyLevels\" \n      [selectedItem]=\"getSelectedDifficulty()\"\n      (valueSelected)=\"onSelectDifficulty($event)\"\n      name=\"difficulty\"\n      title=\"difficulty\"\n      ></app-radio-group>\n\n    <app-radio-group \n      class=\"actionTypeSelect\"\n      [items]=\"actionTypes\" \n      [selectedItem]=\"getSelectedActionType()\"\n      (valueSelected)=\"onSelectCheckType($event)\"\n      name=\"actionType\"\n      title=\"action type\"\n      ></app-radio-group>\n\n    <div class=\"actionsGroup\">\n      <app-button \n        class=\"actionButton\"\n        category=\"primary\" \n        [disabled]=\"!isRollEnabled()\" \n        (click)=\"onRoll()\"\n        >\n        Rolar\n      </app-button>\n      <app-button \n        class=\"actionButton\"\n        category=\"default\" \n        (click)=\"onCancel()\"\n        >\n        Cancelar\n      </app-button>\n    </div>\n  </div>\n</div>","import { DiceCheck } from './dice-check.model';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { DiceCheckResult } from './dice-check-result.model';\nimport { GameEventService } from '../shared/game-event.service';\n\n@Injectable({providedIn: 'root'})\nexport class DiceRollService{\n\n  rollRequested = new EventEmitter<DiceCheck>();\n\n  constructor(private gameEventService: GameEventService){}\n\n  requestDiceRoll() {\n    this.rollRequested.emit(new DiceCheck());\n  }\n\n  roll(diceCheck: DiceCheck, playerName: string) {\n    const result = new DiceCheckResult();\n    result.playerName = playerName;\n    result.attribute = diceCheck.attribute;\n    result.actionType = diceCheck.checkType;\n    for(let i = 0; i<diceCheck.rolls; i++) {\n      result.rolls.push( this.rollDie() )\n    }\n    this.gameEventService.recordDiceRollEvent(result);\n  }\n\n  private rollDie() : number {\n    return Math.ceil(Math.random() * 6);\n  }\n\n}","import { Component, OnInit, Input} from '@angular/core';\nimport { GameState } from '../shared/game.model';\nimport { GameService } from '../shared/game.service';\nimport { DiceRollService } from '../dice-roll/dice-roll.service';\n\n@Component({\n  selector: 'app-game-control',\n  templateUrl: './game-control.component.html',\n  styleUrls: ['./game-control.component.scss']\n})\nexport class GameControlComponent implements OnInit {\n\n  constructor(private gameService: GameService, private diceRollService: DiceRollService) { }\n\n  @Input() gameState: GameState;\n\n  ngOnInit(): void {\n  }\n\n  onStartGame() {\n    this.gameService.changeGameState(\"started\");\n  }\n\n  onEditGame() {\n    this.gameService.changeGameState(\"editing\");\n  }\n\n  onResumeGame() {\n    this.gameService.changeGameState(\"started\");\n  }\n\n  onFinishGame() {\n    if(window.confirm('Realmente deseja finalizar a partida?')) {\n      this.gameService.changeGameState(\"finished\");\n    }\n  }\n\n  onRequestRoll() {\n    this.diceRollService.requestDiceRoll();\n  }\n\n  onRestartGame() {\n    this.gameService.resetGame();\n  }\n\n}\n","<div class=\"actions\">\n  <app-button category=\"primary\"\n    *ngIf=\"gameState === 'not-started'\"\n    (onClick)=\"onStartGame()\"\n    > \n    Começar\n  </app-button>\n\n  <app-button category=\"primary\"\n    *ngIf=\"gameState === 'editing'\"\n    (onClick)=\"onResumeGame()\"\n    > \n    Retomar\n  </app-button>\n\n  <app-button category=\"primary\"\n    *ngIf=\"gameState === 'started'\"\n    (onClick)=\"onRequestRoll()\"\n    > \n    Rolar Dados\n  </app-button>\n\n  <app-button category=\"default\"\n    *ngIf=\"gameState === 'started'\"\n    (onClick)=\"onEditGame()\"\n    > \n    Alterar Jogadores\n  </app-button>\n\n  <app-button category=\"danger\"\n    *ngIf=\"gameState === 'started'\"\n    (onClick)=\"onFinishGame()\"> \n    Finalizar\n  </app-button>\n\n  <app-button category=\"primary\"\n    *ngIf=\"gameState === 'finished'\"\n    (onClick)=\"onRestartGame()\"\n  > \n    Reiniciar\n  </app-button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GameEventService } from '../shared/game-event.service';\nimport { GameEvent } from '../shared/game-event.model';\n\n@Component({\n  selector: 'app-game-events',\n  templateUrl: './game-events.component.html',\n  styleUrls: ['./game-events.component.scss']\n})\nexport class GameEventsComponent implements OnInit {\n\n  events: GameEvent[];\n\n  constructor(private gameEventService: GameEventService) { }\n\n  ngOnInit(): void {\n    this.events = this.gameEventService.getEvents();\n    this.gameEventService.eventsChanged.subscribe(\n      (events: GameEvent[]) => this.events = events\n    )\n  }\n\n}\n","<ul class=\"gameEvents\" *ngIf=\"events && events.length > 0\">\n  <li class=\"gameEvent\"\n    *ngFor=\"let gameEvent of events\">\n\n    <span class=\"time\">{{ gameEvent.timestamp }}</span> \n    <span [ngSwitch]=\"gameEvent.eventType.constructor.name\">\n\n      <span *ngSwitchCase=\"'PlayerCreatedEvent'\">\n        Jogador(a) <span class=\"player\"> {{ gameEvent.eventType.playerName}}</span> criado(a)\n      </span>\n\n      <span *ngSwitchCase=\"'PlayerRemovedEvent'\">\n        Jogador(a) <span class=\"player\"> {{ gameEvent.eventType.playerName}}</span> removido(a)\n      </span>\n\n      <span *ngSwitchCase=\"'PlayerChangedEvent'\">\n        Jogador(a) <span class=\"player\"> {{ gameEvent.eventType.playerName}}</span> alterou:\n        <span *ngIf=\"gameEvent.eventType.nameChanged\">\n          nome para <span class=\"player\">{{ gameEvent.eventType.nameChanged }}</span>; \n        </span>\n        <span *ngIf=\"gameEvent.eventType.attributeChanged\"> \n          atributo de <span class=\"attribute\">{{ gameEvent.eventType.attributeChanged[0] }}</span>\n          para <span class=\"attribute\">{{ gameEvent.eventType.attributeChanged[1] }}</span>; \n        </span>\n        <span *ngIf=\"gameEvent.eventType.descriptionChanged\"> \n          descrição para <span class=\"description\">{{ gameEvent.eventType.descriptionChanged }}</span>\n        </span>\n      </span>\n\n      <span *ngSwitchCase=\"'SimpleMessageEvent'\">\n        {{gameEvent.eventType.text}}\n      </span>\n\n      <span *ngSwitchCase=\"'DiceCheckEvent'\">\n        <span class=\"player\">{{gameEvent.eventType.playerName}}</span>({{gameEvent.eventType.attribute}})\n        tentou uma ação \n          <strong *ngIf=\"gameEvent.eventType.actionType === 'physical'\">física</strong> \n          <strong *ngIf=\"gameEvent.eventType.actionType === 'not-physical'\">não física</strong> \n        e rolou\n        (<span class=\"number\">{{ gameEvent.eventType.rolls.join(', ') }}</span>).\n\n        <span class=\"player\" *ngIf=\"gameEvent.eventType.critical > 0\"> Acerto crítico! </span>\n        <span class=\"success\" *ngIf=\"gameEvent.eventType.successes > 0 && gameEvent.eventType.critical === 0\"> Sucesso. </span>\n        <span class=\"failure\" *ngIf=\"gameEvent.eventType.successes === 0 && gameEvent.eventType.critical === 0\"> Falhou. </span>\n\n      </span>\n\n\n      <span *ngSwitchDefault>\n        {{ gameEvent.eventType.constructor.name }}\n      </span>\n\n\n    </span>\n  </li>\n</ul>\n\n","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { Player, PlayerAttribute } from 'src/app/shared/player.model';\n\n@Component({\n  selector: 'app-player-edit',\n  templateUrl: './player-edit.component.html',\n  styleUrls: ['./player-edit.component.scss']\n})\nexport class PlayerEditComponent implements OnInit {\n\n  @Input() player: Player;\n  @Output() playerEdited = new EventEmitter<Player>();\n\n  @ViewChild('playerName') playerNameInput: ElementRef;\n  @ViewChild('playerAttribute') playerAttributeInput: ElementRef;\n  @ViewChild('playerDescription') playerDescriptionInput: ElementRef;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getFormData() {\n    return {\n      name: this.playerNameInput.nativeElement.value,\n      attribute: <PlayerAttribute>Number(this.playerAttributeInput.nativeElement.value),\n      description: this.playerDescriptionInput.nativeElement.value\n    }\n  }\n\n  onConfirm() { \n    let formData = this.getFormData();\n    this.playerEdited.emit(\n      new Player(\n        formData.name,\n        formData.attribute,\n        formData.description\n      )\n    );\n  }\n\n}\n","<input class=\"playerName\" value=\"{{ player.name }}\" #playerName>\n<app-button category=\"primary\" (click)=\"onConfirm()\">Confirmar</app-button>\n<select class=\"playerAttribute\" #playerAttribute>\n  <option *ngFor=\"let value of [2, 3, 4, 5]\"\n    [value]=\"value\"\n    [selected]=\"player.attribute === value\">\n    {{ value }}\n  </option>\n</select>\n<textarea class=\"playerDescription\" [value]=\"player.description\" #playerDescription>\n  \n</textarea>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Player } from 'src/app/shared/player.model';\nimport { GameState } from 'src/app/shared/game.model';\nimport { GameService } from 'src/app/shared/game.service';\n\n@Component({\n  selector: 'app-player-item',\n  templateUrl: './player-item.component.html',\n  styleUrls: ['./player-item.component.scss']\n})\nexport class PlayerItemComponent implements OnInit {\n\n  @Input() player: Player;\n  @Input() id: number;\n  @Output() editClicked = new EventEmitter<number>();\n  @Output() removeClicked = new EventEmitter<number>();\n\n  @Input() gameState: GameState;\n\n  constructor(private gameService: GameService) { }\n\n  ngOnInit(): void {\n  }\n\n  onEdit() {\n    this.gameService.changeGameState('editing-player');\n    this.editClicked.emit(this.id);\n  }\n\n  onRemove() {\n    this.removeClicked.emit(this.id);\n  }\n\n  isEditable() {\n    return this.gameService.isGameStateEditable(this.gameState);\n  }\n\n}\n","<h3 class=\"playerName\"> {{ player.name }} \n  <app-button \n    size=\"small\" \n    (click)=\"onEdit()\" \n    *ngIf=\"isEditable()\"\n    >\n    editar\n  </app-button>\n\n  <app-button \n    size=\"small\" \n    category=\"danger\" \n    (click)=\"onRemove()\" \n    *ngIf=\"isEditable()\"\n    >\n    remover\n  </app-button>\n</h3>\n<div class=\"playerAttribute\"> {{ player.attribute }} </div>\n<p class=\"playerDescription\">\n  {{ player.description }}\n</p>","import { Component, OnInit, Input } from '@angular/core';\nimport { GameService } from '../shared/game.service';\nimport { Player } from '../shared/player.model';\nimport { GameState } from '../shared/game.model';\n\n@Component({\n  selector: 'app-player-list',\n  templateUrl: './player-list.component.html',\n  styleUrls: ['./player-list.component.scss']\n})\nexport class PlayerListComponent implements OnInit {\n  players: Player[];\n  editing: number;\n  @Input() gameState: GameState;\n\n  constructor(private gameService: GameService) { }\n\n  ngOnInit(): void {\n    this.players = this.gameService.getPlayers();\n    this.gameService.playersChanged.subscribe(\n      (players: Player[]) => this.players = players\n    )\n  }\n\n  onAddNewPlayer() {\n    this.editing = this.gameService.addPlayer( new Player('Name', 2, '') );\n  }\n\n  onEditClicked(id: number) {\n    this.editing = id;\n  }\n\n  onRemoveClicked(id: number) {\n    if(window.confirm(`Realmente deseja remover [${this.players[id].name}]?`)) {\n      this.gameService.removePlayer(id);\n    }\n  }\n\n  onEditFinished(player: Player) {\n    this.gameService.changePlayer(\n      this.editing,\n      player  \n    );\n    this.editing = null;\n    this.gameService.changeGameState('editing');\n  }\n\n  canAddPlayer(): boolean {\n    return this.gameService.isGameStateEditable(this.gameState);\n  }\n\n}\n","<ul class=\"playersList\">\n  <li class=\"playerContainer\"\n    *ngFor=\"let player of players; let id = index\">\n   \n    <app-player-item \n      [player]=\"player\" \n      [id]=\"id\" \n      [gameState]=\"gameState\"\n      (editClicked)=\"onEditClicked($event)\"\n      (removeClicked)=\"onRemoveClicked($event)\"\n      *ngIf=\"editing !== id\"></app-player-item>\n\n    <app-player-edit \n      [player]=\"player\" \n      (playerEdited)=\"onEditFinished($event)\"\n      *ngIf=\"editing === id\"></app-player-edit>\n\n  </li>\n</ul>\n\n<div class=\"addPlayer\" *ngIf=\"canAddPlayer()\">\n  <app-button (onClick)=\"onAddNewPlayer()\"> Adicionar Jogador(a) </app-button>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\ntype ButtonCategory = \"default\" | \"danger\" | \"primary\"\ntype ButtonSize = \"small\" | \"default\" | \"large\"\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() category: ButtonCategory = \"default\";\n  @Input() size: ButtonSize = \"default\";\n  @Input() disabled: boolean = false;\n\n  @Output() onClick = new EventEmitter<void>();\n\n  ngOnInit(): void {\n  }\n\n}","<button\n  class=\"size-{{size}} {{category}}\"\n  (click)=\"onClick.emit()\"\n  [disabled]=\"disabled\"\n> <ng-content></ng-content> </button>","import { PlayerAttribute } from './player.model';\nimport { DiceCheckResult } from '../dice-roll/dice-check-result.model';\n\nexport type GameEventType = SimpleMessageEvent | PlayerCreatedEvent | PlayerChangedEvent | PlayerRemovedEvent\n\nexport class GameEvent {\n  \n  eventType: GameEventType;\n  timestamp: string;\n\n  constructor(eventType: GameEventType) {\n    this.eventType = eventType;\n    this.timestamp = this.getFormattedTimestamp();\n  }\n\n  private getFormattedTimestamp() {\n    const t = new Date();\n    const hours = `${t.getHours()}`;\n    const minutes = `${t.getMinutes() < 10 ? '0' : ''}${t.getMinutes()}`\n    const seconds = `${t.getSeconds() < 10 ? '0' : ''}${t.getSeconds()}`\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n}\n\nexport class PlayerCreatedEvent {\n  playerName: string;\n  constructor(playerName: string){\n    this.playerName = playerName\n  }\n}\n\nexport class PlayerRemovedEvent {\n  playerName: string;\n  constructor(playerName: string){\n    this.playerName = playerName\n  }\n}\n\nexport class PlayerChangedEvent {\n\n  playerName: string = null;\n  nameChanged: string = null;\n  attributeChanged: [PlayerAttribute, PlayerAttribute] = null;\n  descriptionChanged: string = null;\n\n  constructor(playerName: string,\n              nameChanged: string, \n              attributeChanged: [PlayerAttribute, PlayerAttribute], \n              descriptionChanged: string) {\n    this.playerName = playerName;\n    this.nameChanged = nameChanged;\n    this.attributeChanged = attributeChanged;\n    this.descriptionChanged = descriptionChanged;\n  }\n}\n\nexport class DiceCheckEvent {\n  successes: number;\n  critical: number;\n  playerName: string;\n  attribute: number;\n  actionType: string;\n  rolls: number[];\n\n  constructor(diceCheckResult: DiceCheckResult) {\n    this.successes = diceCheckResult.countSuccesses();\n    this.critical = diceCheckResult.countCritical();\n    this.playerName = diceCheckResult.playerName;\n    this.attribute = diceCheckResult.attribute;\n    this.actionType = diceCheckResult.actionType;\n    this.rolls = diceCheckResult.rolls;\n  }\n}\n\nexport class SimpleMessageEvent {\n  text: string;\n  constructor(text: string) {\n    this.text = text;\n  }\n}","import { GameEvent, PlayerCreatedEvent, PlayerChangedEvent, PlayerRemovedEvent, SimpleMessageEvent, DiceCheckEvent } from './game-event.model';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Player, PlayerAttribute } from './player.model';\nimport { DiceCheckResult } from '../dice-roll/dice-check-result.model';\n\n@Injectable({providedIn: 'root'})\nexport class GameEventService {\n  private events: GameEvent[] = [];\n  eventsChanged = new EventEmitter<GameEvent[]>();\n\n  private recordEvent(event: GameEvent): void {\n    this.events.unshift(event);\n    this.eventsChanged.emit(this.events.slice());\n  }\n\n  getEvents() {\n    return this.events.slice();\n  }\n\n  recordAddPlayerEvent(playerName: string): void{\n    this.recordEvent(new GameEvent(\n      new PlayerCreatedEvent(playerName)\n    ));\n  }\n\n  recordPlayerChangeEvent(oldPlayer: Player, newPlayer: Player): void {\n    let nameChanged: string = null;\n    let attributeChanged: [PlayerAttribute, PlayerAttribute] = null;\n    let descriptionChanged: string = null;\n    if (oldPlayer.name !== newPlayer.name){\n      nameChanged = newPlayer.name;\n    }\n    if (oldPlayer.attribute !== newPlayer.attribute) {\n      attributeChanged = [oldPlayer.attribute, newPlayer.attribute];\n    }\n    if (oldPlayer.description !== newPlayer.description) {\n      descriptionChanged = newPlayer.description;\n    }\n\n    if (nameChanged !== null || attributeChanged !== null || descriptionChanged !== null) {\n      this.recordEvent(\n        new GameEvent(new PlayerChangedEvent(\n          oldPlayer.name, nameChanged, attributeChanged, descriptionChanged\n        ))\n      );\n    }\n\n  }\n\n  recordRemovePlayerEvent(playerName: string): void {\n    this.recordEvent(\n      new GameEvent( new PlayerRemovedEvent(playerName) )\n    );\n  }\n\n  recordSimpleMessageEvent(text: string) {\n    this.recordEvent(\n      new GameEvent( new SimpleMessageEvent(text) )\n    )\n  }\n\n  recordDiceRollEvent(diceCheckResult: DiceCheckResult) {\n    this.recordEvent(\n      new GameEvent( new DiceCheckEvent(diceCheckResult) )\n    );\n  }\n\n  clear() {\n    this.events = [];\n    this.eventsChanged.emit([]);\n  }\n}","import { Player } from './player.model';\nimport { GameEvent } from './game-event.model';\n\nexport type GameState = \"not-started\" | \"started\" | \"editing\"| \"editing-player\" | \"finished\";\n\nexport class Game {\n\n  gameState: GameState = \"not-started\";\n  players: Player[] = [];\n\n}","import { Injectable, EventEmitter } from '@angular/core';\nimport { Game, GameState } from './game.model';\nimport { Player } from './player.model';\nimport { GameEventService } from './game-event.service';\n\n@Injectable({providedIn: 'root'})\nexport class GameService {\n  \n  private game: Game = new Game();\n\n  gameStateChanged = new EventEmitter<GameState>();\n  playersChanged = new EventEmitter<Player[]>();\n\n  constructor(private gameEventService: GameEventService){}\n\n  gameStarted(): boolean {\n    return this.game.gameState !== 'not-started';\n  }\n\n  addPlayer(player: Player): number {\n    if (this.gameStarted()){\n      this.gameEventService.recordAddPlayerEvent(player.name);\n    }\n\n    this.game.players.push(player);\n    this.playersChanged.emit(this.getPlayers());\n    return this.game.players.length - 1;\n  }\n\n  changeGameState(newState: GameState): void {\n    if (this.game.gameState === 'not-started' && newState === 'started') {\n      this.gameEventService.recordSimpleMessageEvent('A partida foi iniciada');\n    }\n    if (newState === 'finished') {\n      this.gameEventService.recordSimpleMessageEvent('A partida foi finalizada');\n    }\n    this.game.gameState = newState;\n    this.gameStateChanged.emit(newState);\n  }\n\n  getGameState(): GameState {\n    return this.game.gameState;\n  }\n\n  isGameStateEditable(gameState: GameState): boolean {\n    return gameState === 'editing' || gameState === 'not-started';\n  }\n\n  getPlayers(): Player[] {\n    return this.game.players.slice();\n  }\n\n  changePlayer(id: number, player: Player): void {\n    if (this.gameStarted()){\n      this.gameEventService.recordPlayerChangeEvent(this.game.players[id], player);\n    }\n    this.game.players[id] = player;\n    this.playersChanged.emit(this.getPlayers());\n  }\n\n  removePlayer(id: number): void {\n    if (this.gameStarted()){\n      this.gameEventService.recordRemovePlayerEvent(this.game.players[id].name);\n    }\n    this.game.players.splice(id, 1);\n    this.playersChanged.emit(this.getPlayers());\n  }\n\n  resetGame() {\n    this.game = new Game();\n    this.gameStateChanged.emit(this.game.gameState);\n    this.playersChanged.emit(this.game.players.slice());\n    this.gameEventService.clear()\n  }\n\n}","export class Player {\n\n  name: string;\n  attribute: PlayerAttribute;\n  description: string;\n\n  constructor(name: string, attribute: PlayerAttribute, description: string){\n    this.name = name;\n    this.attribute = attribute;\n    this.description = description;\n  }\n}\n\nexport type PlayerAttribute = 2 | 3 | 4 | 5;","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss']\n})\nexport class RadioGroupComponent implements OnInit {\n\n  @Input() items: {value: string, text: string}[];\n  @Input() name: string;\n  @Input() title: string;\n  @Input() selectedItem: {value: string, text: string};\n  @Output() valueSelected = new EventEmitter<string>();\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onChangeSelected(item: {value: string, text: string}) {\n    this.valueSelected.emit(item.value);\n  }\n\n}\n","<p *ngIf=\"title\" class=\"radioGroup-title\">{{ title }}: {{selectedItem.text}} </p>\n<div class=\"radioGroup-container\">\n  <label *ngFor=\"let item of items\" class=\"radioGroup-label\" (click)=\"onChangeSelected(item)\">\n    <input type=\"radio\" [name]=\"name\" [value]=\"item.value\" [checked]=\"item.value === selectedItem.value\">\n    <span class=\"radioGroup-item\">{{item.text}}</span>\n  </label>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}